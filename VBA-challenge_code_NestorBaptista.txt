Sub VBA()
    
    'Declare Variables
    Dim ws As Worksheet
    Dim i As Long, last_row As Long, summary_table_row As Long, start_row As Long
    Dim open_value As Double, close_value As Double, yearly_change As Double, percentage_change As Double, total_stock_volume As Double, max_percent_increase As Double, max_percent_decrease As Double, max_total_volume As Double
    Dim tickerID As String, max_percent_increase_ticker As String, max_percent_decrease_ticker As String, max_total_volume_ticker As String
    
    ' Loop through each worksheet in the workbook
    For Each ws In Worksheets
    
        ' Add table headers to the worksheet
        ws.Range("I1").Value = "Ticker"
        ws.Range("J1").Value = "Yearly Change"
        ws.Range("K1").Value = "Percentage Change"
        ws.Range("L1").Value = "Total Stock Volume"
        ws.Range("O2").Value = "Greatest % Increase"
        ws.Range("O3").Value = "Greatest % Decrease"
        ws.Range("O4").Value = "Greatest Total Volume"
        ws.Range("P1").Value = "Ticker"
        ws.Range("Q1").Value = "Value"
    
        ' Find the last row in the worksheet
        last_row = ws.Cells(Rows.Count, 1).End(xlUp).Row
        
        ' Setting variable values
        summary_table_row = 2
        start_row = 2
        open_value = 0
        close_value = 0
        total_stock_volume = 0
        max_percent_increase = 0
        max_percent_decrease = 0
        max_total_volume = 0
        
        ' Loop through each row of the worksheet
        For i = 2 To last_row
            ' Check if the current row's ticker ID is different from the previous row
            If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then
                ' Get the current ticker ID, open value, and close value
                tickerID = ws.Range("A" & i).Value
                open_value = ws.Range("C" & start_row).Value
                close_value = ws.Range("F" & i).Value
                
                 ' Calculate the yearly change, percentage change, and total stock volume for the current ticker
                yearly_change = close_value - open_value
                percentage_change = (close_value - open_value) / open_value
                total_stock_volume = total_stock_volume + ws.Range("G" & i).Value
                
                ' Add the current ticker's information to the summary table and add formating
                ws.Range("I" & summary_table_row).Value = tickerID
                ws.Range("J" & summary_table_row).Value = yearly_change
                ws.Range("J" & summary_table_row).NumberFormat = "_($* #,##0.00_);_($* (#,##0.00);_($* ""-""??_);_(@_)"
                ws.Range("K" & summary_table_row).Value = percentage_change
                ws.Range("K" & summary_table_row).NumberFormat = "0.00%"
                ws.Range("L" & summary_table_row).Value = total_stock_volume
                ws.Range("L" & summary_table_row).NumberFormat = "#,##0"
                
                ' Highlight the yearly change cell with green if it is positive and with red if it is negative
                If yearly_change >= 0 Then
                    ws.Range("J" & summary_table_row).Interior.Color = vbGreen
                Else
                    ws.Range("J" & summary_table_row).Interior.Color = vbRed
                End If
                
                 If percentage_change >= 0 Then
                    ws.Range("K" & summary_table_row).Interior.Color = vbGreen
                Else
                    ws.Range("K" & summary_table_row).Interior.Color = vbRed
                End If
                
                ' Check if percentage change is the highest or lowest so far
                If percentage_change > max_percent_increase Then
                    max_percent_increase = percentage_change
                    max_percent_increase_ticker = tickerID
                    
                ElseIf percentage_change < max_percent_decrease Then
                    max_percent_decrease = percentage_change
                    max_percent_decrease_ticker = tickerID
                End If
                
                ' Check if total stock volume is the highest so far
                If total_stock_volume > max_total_volume Then
                    max_total_volume = total_stock_volume
                    max_total_volume_ticker = tickerID
                End If
                
                ' Reseting variables for next " i " Loop
                start_row = i + 1
                summary_table_row = summary_table_row + 1
                open_value = 0
                close_value = 0
                total_stock_volume = 0
                
             ' If the current row is not the last row for a particular ticker, then add its stock volume to the total stock volume
            Else
                total_stock_volume = total_stock_volume + ws.Range("G" & i).Value
                
            End If
        Next i
        
        ' Add the results for the greatest % increase, decrease, and greatest total volume to the summary table 2 and add formating
        ws.Range("Q2").Value = max_percent_increase
        ws.Range("Q2").Value = max_percent_increase
        ws.Range("Q2").NumberFormat = "0.00%"
        ws.Range("P2").Value = max_percent_increase_ticker
        ws.Range("Q3").Value = max_percent_decrease
        ws.Range("Q3").NumberFormat = "0.00%"
        ws.Range("P3").Value = max_percent_decrease_ticker
        ws.Range("Q4").Value = max_total_volume
        ws.Range("Q4").NumberFormat = "#,##0"
        ws.Range("P4").Value = max_total_volume_ticker
        
        ' Auto-fit the width of columns for the summary tables so that the content fits within the cells
        ws.Columns("I:Q").AutoFit
        
    Next ws
End Sub